workspace(name = "rules_clang_tidy")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")

http_archive(
    name = "bazel_skylib",
    sha256 = "bc283cdfcd526a52c3201279cda4bc298652efa898b10b4db0837dc51652756f",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.7.1/bazel-skylib-1.7.1.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.7.1/bazel-skylib-1.7.1.tar.gz",
    ],
)

http_archive(
    name = "buildifier_prebuilt",
    sha256 = "481f220bee90024f4e63d3e516a5e708df9cd736170543ceab334064fa773f41",
    strip_prefix = "buildifier-prebuilt-7.1.2",
    urls = [
        "http://github.com/keith/buildifier-prebuilt/archive/7.1.2.tar.gz",
    ],
)

load("@buildifier_prebuilt//:deps.bzl", "buildifier_prebuilt_deps")

buildifier_prebuilt_deps()

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

load("@buildifier_prebuilt//:defs.bzl", "buildifier_prebuilt_register_toolchains")

buildifier_prebuilt_register_toolchains()

load("//private:local_workspace_directories.bzl", "local_workspace_directories")

local_workspace_directories(
    name = "local_workspace_directories",
)

http_file(
    name = "shfmt",
    executable = True,
    integrity = "sha256-2ZsGUGruKskRPa7DBJki5w3Iz/uEZY465RLGpsvhAbY=",
    url = "https://github.com/mvdan/sh/releases/download/v3.9.0/shfmt_v3.9.0_linux_amd64",
)

http_archive(
    name = "rules_multirun",
    sha256 = "0e124567fa85287874eff33a791c3bbdcc5343329a56faa828ef624380d4607c",
    url = "https://github.com/keith/rules_multirun/releases/download/0.9.0/rules_multirun.0.9.0.tar.gz",
)

http_archive(
    name = "toolchains_llvm",
    canonical_id = "v1.1.2",
    sha256 = "c304fc9286c6fa2acb6dcea8961dc0d526a076f8cb64da4763c36aebcf5cff56",
    strip_prefix = "toolchains_llvm-v1.1.2",
    url = "https://github.com/bazel-contrib/toolchains_llvm/releases/download/v1.1.2/toolchains_llvm-v1.1.2.tar.gz",
)

load("@toolchains_llvm//toolchain:deps.bzl", "bazel_toolchain_dependencies")

bazel_toolchain_dependencies()

load("@toolchains_llvm//toolchain:rules.bzl", "llvm_toolchain")

llvm_toolchain(
    name = "llvm_toolchain",
    llvm_version = "16.0.0",
)

# Skip toolchain registration as this isn't used directly. We define the
# toolchain here to add it as a test dependency so that it is fetched before
# running the test. Once the test starts, the toolchain external is symlinked
# instead of being downloaded within the test.

load("//private:local_example_status.bzl", "local_example_status")

local_example_status(name = "misc-unused")

local_example_status(name = "dep-cc_test")

local_example_status(name = "shared-source")

local_example_status(name = "hermetic-toolchain")
