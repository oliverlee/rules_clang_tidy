load("@bazel_skylib//rules:common_settings.bzl", "string_flag")
load("//private:path_binary_wrapper.bzl", "path_binary_wrapper")

package(default_visibility = ["//visibility:public"])

path_binary_wrapper(
    name = "clang-tidy-wrapper",
    binary = "clang-tidy",
)

path_binary_wrapper(
    name = "clang-apply-replacements-wrapper",
    binary = "clang-apply-replacements",
)

filegroup(
    name = "default-config",
    srcs = [".clang-tidy"],
)

label_flag(
    name = "clang-tidy",
    build_setting_default = ":clang-tidy-wrapper",
)

label_flag(
    name = "clang-apply-replacements",
    build_setting_default = ":clang-apply-replacements-wrapper",
)

label_flag(
    name = "config",
    build_setting_default = ":default-config",
)

sh_binary(
    name = "apply-fixes",
    srcs = ["apply-fixes.sh"],
    args = ["$(location :clang-apply-replacements)"],
    data = [":clang-apply-replacements"],
)

# Extra options appended after `tidy_options`. This allows extra options to be
# specified on the command line (e.g. changing the checks to use with
# `clang-tidy`).
string_flag(
    name = "extra-options",
    build_setting_default = "",
)
