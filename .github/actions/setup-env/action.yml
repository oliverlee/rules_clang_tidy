name: setup env

inputs:
  clang:
    default: 18

runs:
  using: "composite"
  steps:

    - name: install libtinfo5
      if: runner.os == 'Linux'
      shell: bash
      run: |
        # this is required by the hermetic llvm 16 toolchain
        sudo apt-get install -y libtinfo5

    - name: install clang-${{ inputs.clang }}
      if: runner.os == 'Linux'
      shell: bash
      run: |
        set -x

        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh ${{ inputs.clang }}
        sudo apt-get install -y \
          clang-tidy-${{ inputs.clang }} \
          clang-tools-${{ inputs.clang }} \
          libc++-${{ inputs.clang }}-dev

        sudo ln -sf $(which clang-${{ inputs.clang }}) /usr/bin/clang
        sudo ln -sf $(which clang-tidy-${{ inputs.clang }}) /usr/bin/clang-tidy
        sudo ln -sf $(which clang-apply-replacements-${{ inputs.clang }}) \
          /usr/bin/clang-apply-replacements

        clang --version
        clang-tidy --version
        clang-apply-replacements --version

    - name: define HOME
      if: runner.os == 'macOS'
      shell: bash
      run: |
        set -x

        # https://github.com/bazelbuild/continuous-integration/issues/485#issuecomment-466336418
        # https://pkg.go.dev/os#UserCacheDir
        echo "build --action_env=HOME=$HOME" \
          >> "$HOME/.bazelrc"

    - name: install clang-${{ inputs.clang }}
      if: runner.os == 'macOS'
      shell: bash
      run: |
        set -x

        brew install llvm@${{ inputs.clang }}

        # homebrew no longer installs into the default PATH
        # https://github.com/bazelbuild/bazel/issues/12049#issuecomment-1439637677
        echo "build --action_env=PATH=$(brew --prefix llvm@${{ inputs.clang }})/bin:$PATH" \
          >> "$HOME/.bazelrc"

